input {
    jdbc {
        jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "SELECT u.*, um.*, u.updateDate as uupdateDate, u.id as uid, um.updateDate as umupdateDate, um.id as umid FROM tuyensinhchannel.university as u left join tuyensinhchannel.university_major as um on u.id = um.universityId order by universityId;"
    }
}
filter {
mutate {}
  aggregate {
       task_id => "%{uid}"
       code => "
	   map['id'] = event.get('uid')
	   map['title'] = event.get('title')
	   map['code'] = event.get('code')
	   map['managerId'] = event.get('managerid')
	   map['type'] = event.get('type')
	   map['rating'] = event.get('rating')
	   map['facebook'] = event.get('facebook')
	   map['group'] = event.get('group')
	   map['engName'] = event.get('engname')
	   map['wallImagePath'] = event.get('wallimagepath')
	   map['avatarImagePath'] = event.get('avatarimagepath')
	   map['website'] = event.get('website')
	   map['phone'] = event.get('phone')
	   map['year'] = event.get('year')
	   map['email'] = event.get('email')
	   map['updateDate'] = event.get('uupdateDate')
	   map['intro'] = event.get('intro')
	   map['tuition'] = event.get('tuition')
	   map['eduLevel'] = event.get('edulevel')
	   map['vnName'] = event.get('vnname')
         map['major'] ||= []
         map['major'] << {'mid' => event.get('umid'), 'otherCode' => event.get('othercode'), 'otherName' => event.get('othername'), 'educationProgram' => event.get('educationprogram'),'universityid' => event.get('universityid'), 'updateDate' => event.get('umupdatedate')}
         event.cancel()
       "
       push_previous_map_as_event => true
       timeout => 3
     }
}
output {
    elasticsearch {
        hosts => ["${LOGSTASH_ELASTICSEARCH_HOST}"]
        index => "tuyensinhchannel"
		document_type => "university_major"
    }
    stdout { codec => json_lines }

}
